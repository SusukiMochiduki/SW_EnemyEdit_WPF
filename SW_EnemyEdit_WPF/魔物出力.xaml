<Window x:Class="SW_EnemyEdit_WPF.魔物出力"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SW_EnemyEdit_WPF"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        mc:Ignorable="d"
        Title="魔物出力" Height="600" Width="1100" Loaded="Window_Loaded" KeyDown="Window_KeyDown">
    <Window.Resources>
        <ObjectDataProvider x:Key="強さ変動分類EnumKey" MethodName="GetValues" 
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:強さ変動分類"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="剣のかけら振分分類EnumKey" MethodName="GetValues" 
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:剣のかけら振分分類"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="弱点値上昇分類EnumKey" MethodName="GetValues" 
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:TD弱点値上昇分類"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="先制値上昇分類EnumKey" MethodName="GetValues" 
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:TD先制値上昇分類"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="出力分類EnumKey" MethodName="GetValues" 
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:出力分類"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="400"/>
            <ColumnDefinition
                Width="50"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid
            Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Canvas
                Grid.Row="0">
                <CheckBox x:Name="checkBoxSW25" Content="SW2.5" IsChecked="True" Canvas.Left="10" Canvas.Top="10"/>
                <CheckBox x:Name="checkBoxSW20" Content="SW2.0" Canvas.Left="68" Canvas.Top="10"/>
                <Label Content="名前" Canvas.Left="10" Canvas.Top="27"/>
                <Label Content="分類" Canvas.Left="174" Canvas.Top="27"/>
                <Label Content="タグ" Canvas.Left="16" Canvas.Top="57"/>
                <TextBox x:Name="TextBox検索名前" Height="23" Canvas.Left="49" TextWrapping="Wrap" Text="" Canvas.Top="30" Width="120"/>
                <TextBox x:Name="TextBox検索分類" Height="23" Canvas.Left="213" TextWrapping="Wrap" Text="" Canvas.Top="30" Width="120"/>
                <TextBox x:Name="TextBox検索タグ" Height="23" Canvas.Left="49" TextWrapping="Wrap" Text="" Canvas.Top="58" Width="120"/>

                <Button Content="検索" Canvas.Left="315" Canvas.Top="70" Width="75" Click="Button検索_Click"/>
            </Canvas>
            <DataGrid
                x:Name="DataGrid全魔物"
                AutoGenerateColumns="False"
                Grid.Row="1"
                IsReadOnly="True"
                RowHeight="23"
                ItemsSource="{Binding 全魔物}"
                CanUserResizeRows="False" KeyDown="DataGrid全魔物_KeyDown" VerticalScrollBarVisibility="Visible">
                <DataGrid.Columns>
                    <DataGridTextColumn
                    Binding="{Binding LV}"
                    Header="LV"/>
                    <DataGridTextColumn
                    Binding="{Binding 分類}"
                    Header="分類"/>
                    <DataGridCheckBoxColumn
                    Binding="{Binding オリジナル}"
                    Header="自作"/>
                    <DataGridCheckBoxColumn
                    Binding="{Binding ネームド}"
                    Header="ネームド"/>
                    <DataGridTextColumn
                    Binding="{Binding 名称}"
                    Header="名称"/>
                    <DataGridTextColumn
                    Binding="{Binding 部位数}"
                    Header="部位"/>
                    <DataGridTextColumn
                    Binding="{Binding タグ}"
                    Header="タグ"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid
            Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="30"/>
                <RowDefinition
                    Height="30"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button
                Grid.Row="0"
                Content="→"
                Click="Button_ClickAdd"/>
            <Button
                Grid.Row="1"
                Content="←"
                Click="Button_ClickRemove"/>
        </Grid>
        <Grid
            Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="150"/>
                <RowDefinition
                    Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <DataGrid
                Grid.Row="0"
                x:Name="DataGridピックアップ魔物"
                ItemsSource="{Binding ピックアップ魔物}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserResizeRows="False"
                RowHeight="23"
                KeyDown="DataGridピックアップ魔物_KeyDown"
                VerticalScrollBarVisibility="Visible">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Binding="{Binding LV}"
                        IsReadOnly="True"
                        Header="LV"/>
                    <DataGridTextColumn
                        Binding="{Binding 分類}"
                        IsReadOnly="True"
                        Header="分類"/>
                    <DataGridCheckBoxColumn
                        Binding="{Binding オリジナル}"
                        IsReadOnly="True"
                        Header="自作"/>
                    <DataGridCheckBoxColumn
                        Binding="{Binding ネームド}"
                        IsReadOnly="True"
                        Header="ネームド"/>
                    <DataGridTextColumn
                        Binding="{Binding 名称}"
                        IsReadOnly="True"
                        Header="名称"/>
                    <DataGridTextColumn
                        Binding="{Binding 部位数}"
                        IsReadOnly="True"
                        Header="部位"/>
                    <DataGridTextColumn
                        IsReadOnly="True"
                        MaxWidth="60"
                        Binding="{Binding 特殊能力}"
                        Header="特殊能力">
                        <DataGridTextColumn.ElementStyle >
                            <Style TargetType="TextBlock">
                                <Setter Property="ToolTipService.ToolTip" Value="{Binding 特殊能力}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridComboBoxColumn
                        ItemsSource="{Binding Source={StaticResource 強さ変動分類EnumKey}}" 
                        SelectedItemBinding="{Binding 強さ変動, Mode=TwoWay}"
                        Header="強さ"/>
                    <DataGridTextColumn
                        Binding="{Binding 剣のかけら個数, Mode=TwoWay}"
                        Header="かけら個数"/>
                    <DataGridComboBoxColumn
                        ItemsSource="{Binding Source={StaticResource 剣のかけら振分分類EnumKey}}" 
                        SelectedItemBinding="{Binding 剣のかけら振分, Mode=TwoWay}"
                        Header="振り方">
                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn
                        ItemsSource="{Binding Source={StaticResource 弱点値上昇分類EnumKey}}" 
                        SelectedItemBinding="{Binding 弱点値上昇, Mode=TwoWay}"
                        Header="弱点値上昇">
                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn
                        ItemsSource="{Binding Source={StaticResource 先制値上昇分類EnumKey}}" 
                        SelectedItemBinding="{Binding 先制値上昇, Mode=TwoWay}"
                        Header="先制値上昇">
                    </DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Canvas
                Grid.Row="1">
                <ComboBox 
                    x:Name="ComboBoxOutput"
                    Canvas.Left="10" 
                    Canvas.Top="10" 
                    Width="120"
                    ItemsSource="{Binding Source={StaticResource 出力分類EnumKey}}"
                    SelectedItem="{x:Static local:出力分類.圧縮}"/>


                <Button Content="出力" Canvas.Left="10" Canvas.Top="37" Width="75" Click="ButtonOutput_Click"/>
                <CheckBox x:Name="checkBoxOutputSW25" Content="SW2.5用出力" IsChecked="True" Canvas.Left="135" Canvas.Top="14"/>
                <Label Content="[F1]で部位編集" Canvas.Left="315" Canvas.Top="6" />
            </Canvas>
            <TextBox
                x:Name="TextBoxOutput"
                Grid.Row="2"
                TextWrapping="WrapWithOverflow"
                VerticalScrollBarVisibility="Visible"
                AcceptsReturn="True"
                GotFocus="TextBoxOutput_GotFocus"/>
        </Grid>
    </Grid>
</Window>
